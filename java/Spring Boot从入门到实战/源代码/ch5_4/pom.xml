<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>  
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ch</groupId>
	<artifactId>ch5_4</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ch5_4</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 添加Servlet依赖 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
			<!--provided 被依赖包理论上可以参与编译、测试、运行等阶段，相当于compile，
			但是在打包阶段做了exclude的动作。适用场景：例如， 如果我们在开发一个web 应用，
			在编译时我们需要依赖 servlet-api.jar，但是在运行时我们不需要该 jar包，
			因为这个jar包已由应用服务器提供，此时我们需要使用 provided 进行范围修饰。-->
		</dependency>
		<!-- 添加Tomcat依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Jasper是Tomcat使用的引擎，
		使用tomcat-embed-jasper可以将Web应用在内嵌的tomcat下运行 -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- 添加JSTL依赖 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<!-- 如果没有指定 scope值，该元素的默认值为 compile。
			被依赖包需要参与到当前项目的编译，测试，打包，运行等阶段。
			打包的时候通常会包含被依赖包。-->
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>  

</project>
